[{"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/index.js":"1","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/App.js":"2","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/router.js":"3","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Home/index.js":"4","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Filme/index.js":"5","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/components/Header/index.js":"6","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/services/api.js":"7","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Erro/index.js":"8","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Favoritos/index.js":"9"},{"size":469,"mtime":1676495630197,"results":"10","hashOfConfig":"11"},{"size":774,"mtime":1677093021197,"results":"12","hashOfConfig":"11"},{"size":678,"mtime":1676921518891,"results":"13","hashOfConfig":"11"},{"size":1612,"mtime":1676759784514,"results":"14","hashOfConfig":"11"},{"size":2545,"mtime":1677093182251,"results":"15","hashOfConfig":"11"},{"size":295,"mtime":1679237002756,"results":"16","hashOfConfig":"11"},{"size":270,"mtime":1676558858144,"results":"17","hashOfConfig":"11"},{"size":298,"mtime":1676760193495,"results":"18","hashOfConfig":"11"},{"size":1395,"mtime":1677093487408,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1kw2y6u",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/index.js",[],[],[],"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/App.js",[],[],"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/router.js",[],[],"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Home/index.js",["50"],[],"import { useEffect, useState } from \"react\";\nimport api from '../../services/api';\nimport { Link } from \"react-router-dom\";\nimport './home.css';\n\n// https://api.themoviedb.org/3/movie/now_playing?api_key=f9261560796a63450d2e55fa40ded231\n\nfunction Home(){\n    const [filmes, setFilmes] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(()=>{\n        async function loadFilmes(){\n            const response = await api.get(\"movie/now_playing\", {\n                params:{\n                    api_key: \"f9261560796a63450d2e55fa40ded231\",\n                    language: \"pt-BR\",\n                    page: 1,\n                }\n            })\n\n            //console.log(response.data.results.slice(0, 10));\n            setFilmes(response.data.results.slice(0, 20));\n            setLoading(false);\n        }\n\n        loadFilmes();\n    },[])\n\n    if(loading){\n        return(\n            <div className=\"loading\">\n                <h2>Carregando Filmes...</h2>\n            </div>\n        )\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"lista-filmes\">\n                {filmes.map((filme)=>{\n                    return(\n                        <article key={filme.id}>\n                            <strong>{filme.title}</strong>\n                            <img src={`https://image.tmdb.org/t/p/original/${filme.poster_path}`} />\n                            <Link to={`/filme/${filme.id}`}>Acessar</Link>\n                        </article>\n                    )\n                })}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Home;","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Filme/index.js",["51"],[],"import { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport api from '../../services/api'\nimport './filme.css';\n\n// https://api.themoviedb.org/3/movie/505642?api_key=f9261560796a63450d2e55fa40ded231\nfunction Filme(){\n    const {id} = useParams();\n    const navigation = useNavigate();\n    const [filme, setFilme] = useState({});\n    const [loading, setLoading] = useState(true);\n    \n\n    useEffect(()=>{\n        async function loadFilm(){\n            await api.get(`/movie/${id}`,{\n                params:{\n                    api_key: \"f9261560796a63450d2e55fa40ded231\",\n                    language: \"pt-BR\",\n                }\n            })\n            .then((response)=>{\n                setFilme(response.data);\n                setLoading(false);\n            })\n            .catch(()=>{\n                console.log(\"Filme não encontrado\");\n                navigation('/',{replace: true});\n                return;\n            })\n        }\n        loadFilm();\n\n        return () => {\n            console.log(\"Componente desmontado\");\n        }\n\n        \n    },[navigation, id])\n\n    function salvarFilme(){\n        const minhaLista = localStorage.getItem(\"@filmow\");\n\n        let filmesSalvos = JSON.parse(minhaLista) || [];\n\n        const hasFilme = filmesSalvos.some((filmesSalvo)=>filmesSalvo.id === filme.id)\n\n        if(hasFilme){\n            toast.error(\"Esse filme já está na sua lista!\");\n            return;\n        }\n\n        filmesSalvos.push(filme);\n        localStorage.setItem(\"@filmow\", JSON.stringify(filmesSalvos));\n        toast.success(\"Filme salvo com sucesso!\");\n    }\n\n    if(loading){\n        return(\n            <div className=\"filme-info\">\n                <h1>Carregando detalhes do filme...</h1>\n            </div>\n        )\n    }\n\n    return(\n        <div className=\"filme-info\">\n            <h1>{filme.title}</h1>\n            <img src={`https://image.tmdb.org/t/p/original/${filme.backdrop_path}`} alt={filme.title} />\n\n            <h3>Sinopse</h3>\n            <span>{filme.overview}</span>\n            <strong>Avaliação: {filme.vote_average} /10</strong>\n\n            <div className=\"area-buttons\">\n                <button onClick={salvarFilme}>Salvar</button>\n                <button>\n                    <a target=\"_blank\" rel=\"external\" href={`https://youtube.com/results?search_query=${filme.title} Trailer`}>Trailer</a>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Filme;","/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/components/Header/index.js",[],[],"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/services/api.js",[],[],"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Erro/index.js",[],[],"/Users/jonatasfrost/Documents/Cursos/reactJS/filmow/src/pages/Favoritos/index.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":45,"column":29,"nodeType":"54","endLine":45,"endColumn":101},{"ruleId":"55","severity":1,"message":"56","line":80,"column":21,"nodeType":"54","messageId":"57","endLine":80,"endColumn":128,"fix":"58"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"59","text":"60"},[2354,2364],"\"external noreferrer\""]